{"version":3,"sources":["webpack://frontEndBoilerplate/./src/js/main.js"],"names":["tasksArray","Addform","document","querySelector","editform","taskList","addTask","cancel","clearAll","tasks","localStorage","getItem","JSON","parse","style","display","showTask","listItems","forEach","task","index","isCompleted","dateTime","innerHTML","addEventListener","e","preventDefault","Task","value","datetime","checked","test","unshift","setItem","stringify","alert","target","classList","contains","parentElement","getAttribute","splice","slice","setAttribute","console","log","updatedTask"],"mappings":"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","file":"js/main.b887659f6af0715ce4fb.bundle.js","sourcesContent":["import \"../scss/style.scss\";\r\n// Initializing a variable tasksArray\r\nlet tasksArray;\r\n// Fetching DOM Elements\r\nconst Addform = document.querySelector(\".add-Task-form\");\r\nconst editform = document.querySelector(\".edit-Task-form\");\r\nconst taskList = document.querySelector(\".task-list\");\r\nconst addTask = document.querySelector(\".add-task\");\r\nconst cancel = document.querySelector(\".cancel\");\r\nconst clearAll = document.querySelector(\".clearAll\");\r\n\r\n// Assigning values to tasksArray based on localstorage\r\nconst tasks = localStorage.getItem(\"tasks\");\r\nif (!tasks) {\r\n  tasksArray = [];\r\n  clearAll.style.display = \"none\";\r\n} else {\r\n  tasksArray = JSON.parse(tasks);\r\n  clearAll.style.display = \"block\";\r\n}\r\n\r\n// showTask method for inserting tasks into DOM\r\nconst showTask = () => {\r\n  // initializing an empty variable listItems\r\n  let listItems = \"\";\r\n  // Pushing tasks from tasksArray to listItems\r\n  tasksArray.forEach((task, index) => {\r\n    listItems += `<li class=\"task-item ${\r\n      task.isCompleted === true ? \"task-completed\" : \"\"\r\n    }\" data-index =\"${index}\">\r\n        <div>\r\n        <p>${task.task}\r\n        </p>\r\n        <span>${task.dateTime}</span>\r\n        </div>\r\n        <div class=\"task-item-controls\">\r\n        <i class=\"fas fa-pencil-alt edit\"></i>\r\n        <i class=\"fas fa-trash delete\"></i>\r\n        </div>`;\r\n  });\r\n\r\n  // Inserting listItems to the dom\r\n  if (!listItems) {\r\n    taskList.innerHTML =\r\n      \"<li class='text-info d-flex justify-content-center'>No Tasks Have been Added yet...</li>\";\r\n    clearAll.style.display = \"none\";\r\n    return;\r\n  }\r\n  taskList.innerHTML = listItems;\r\n  clearAll.style.display = \"block\";\r\n};\r\n\r\n// rendering tasks to to the dom\r\ndocument.addEventListener(\"domContentLoaded\", showTask());\r\n\r\n// Event listener for addTask button\r\naddTask.addEventListener(\"click\", (e) => {\r\n  e.preventDefault();\r\n  Addform.style.display = \"block\";\r\n  addTask.style.display = \"none\";\r\n  cancel.style.display = \"block\";\r\n});\r\n\r\n// Event listener for Cancel button\r\ncancel.addEventListener(\"click\", (e) => {\r\n  e.preventDefault();\r\n  Addform.Task.value = \"\";\r\n  Addform.datetime.value = \"\";\r\n  Addform.isCompleted.checked = false;\r\n  editform.Task.value = \"\";\r\n  editform.datetime.value = \"\";\r\n  editform.isCompleted.checked = false;\r\n  Addform.style.display = \"none\";\r\n  editform.style.display = \"none\";\r\n  addTask.style.display = \"block\";\r\n  cancel.style.display = \"none\";\r\n});\r\n\r\n// Add a new task to task array and store to loacalstorage\r\nAddform.addEventListener(\"submit\", (e) => {\r\n  e.preventDefault();\r\n  // Fetch Form Values\r\n  const task = Addform.Task.value;\r\n  const dateTime = Addform.datetime.value;\r\n  const isCompleted = Addform.isCompleted.checked;\r\n  // Validating\r\n  if (!/\\w/.test(task) && !/\\w/.test(dateTime)) {\r\n    alert(\"Please add a Task\");\r\n    return;\r\n  }\r\n  // Pushing the values in the Task Array\r\n  tasksArray.unshift({ task, dateTime, isCompleted });\r\n  // Setting Task Array To LocalStorage\r\n  localStorage.setItem(\"tasks\", JSON.stringify(tasksArray));\r\n  // Re-rendering Tasks\r\n  showTask();\r\n  // Removing Form  values\r\n  Addform.Task.value = \"\";\r\n  Addform.datetime.value = \"\";\r\n  Addform.isCompleted.checked = false;\r\n});\r\n\r\n// Event listner for delete and edit\r\ntaskList.addEventListener(\"click\", (e) => {\r\n  e.preventDefault();\r\n  const target = e.target;\r\n  // Checking and handling Delete event\r\n  if (target.classList.contains(\"delete\")) {\r\n    let index = target.parentElement.parentElement.getAttribute(\"data-index\");\r\n    tasksArray.splice(index, 1);\r\n    // Storing new Array to localstorage after delete\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasksArray));\r\n    // re-rendering tasks\r\n    showTask();\r\n  }\r\n  // checking & handling edit event\r\n  if (target.classList.contains(\"edit\")) {\r\n    let index = target.parentElement.parentElement.getAttribute(\"data-index\");\r\n    Addform.style.display = \"none\";\r\n    editform.style.display = \"block\";\r\n    addTask.style.display = \"none\";\r\n    cancel.style.display = \"block\";\r\n    let task = tasksArray.slice(index);\r\n    editform.setAttribute(\"task-index\", index);\r\n    editform.Task.value = task[0].task;\r\n    editform.datetime.value = task[0].dateTime;\r\n    editform.isCompleted.checked = task[0].isCompleted;\r\n  }\r\n});\r\n\r\neditform.addEventListener(\"submit\", (e) => {\r\n  e.preventDefault();\r\n  // Fetch Form Values\r\n  let task = editform.Task.value;\r\n  let dateTime = editform.datetime.value;\r\n  let isCompleted = editform.isCompleted.checked;\r\n  let index = editform.getAttribute(\"task-index\");\r\n  // Validating\r\n  if (!/\\w/.test(task) && !/\\w/.test(dateTime)) {\r\n    alert(\"Please add a Task\");\r\n    return;\r\n  }\r\n  // Finding the values in the Task Array\r\n  tasksArray.splice(index, 1, { task, dateTime, isCompleted });\r\n  // Setting Task Array To LocalStorage\r\n  localStorage.setItem(\"tasks\", JSON.stringify(tasksArray));\r\n  // Re-rendering Tasks\r\n  showTask();\r\n  // Removing Form from dom\r\n  editform.style.display = \"none\";\r\n  editform.Task.value = \"\";\r\n  editform.datetime.value = \"\";\r\n  editform.isCompleted.checked = false;\r\n  addTask.style.display = \"block\";\r\n  cancel.style.display = \"none\";\r\n});\r\n\r\n// checking & handling edit event\r\ntaskList.addEventListener(\"dblclick\", (e) => {\r\n  if (e.target.classList.contains(\"task-item\")) {\r\n    console.log(e.target);\r\n    let index = e.target.getAttribute(\"data-index\");\r\n    let task = tasksArray.slice(index);\r\n    let updatedTask = {\r\n      task: task[0].task,\r\n      dateTime: task[0].dateTime,\r\n      isCompleted: !task[0].isCompleted,\r\n    };\r\n    // Finding the values in the Task Array\r\n    tasksArray.splice(index, 1, updatedTask);\r\n    // Storing new Array to localstorage after delete\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasksArray));\r\n    // re-rendering tasks\r\n    showTask();\r\n  }\r\n});\r\n\r\nclearAll.addEventListener(\"click\", () => {\r\n  tasksArray = [];\r\n  // Storing new Array to localstorage after delete\r\n  localStorage.setItem(\"tasks\", JSON.stringify(tasksArray));\r\n  clearAll.style.display = \"none\";\r\n  showTask();\r\n});\r\n"],"sourceRoot":""}